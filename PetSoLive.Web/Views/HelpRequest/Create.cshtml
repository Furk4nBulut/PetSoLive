@model PetSoLive.Core.Entities.HelpRequest

@{
ViewData["Title"] = "Create Help Request";
}

<h1>@ViewData["Title"]</h1>

<!-- Display validation errors at the top of the form -->
@if (!ViewData.ModelState.IsValid)
{
<div class="alert alert-danger">
    <ul>
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
        <li>@error.ErrorMessage</li>
        }
    </ul>
</div>
}

<form asp-action="Create" method="post">
    <div class="form-group">
        <label for="Description">Description</label>
        <textarea asp-for="Description" class="form-control" id="Description" rows="3" required></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label>Emergency Level</label><br>

        <!-- Radio buttons for Emergency Level -->
        <div class="form-check">
            <input type="radio" class="form-check-input" id="Low" name="EmergencyLevel" value="Low">
            <label class="form-check-label" for="Low">Low</label>
        </div>

        <div class="form-check">
            <input type="radio" class="form-check-input" id="Medium" name="EmergencyLevel" value="Medium">
            <label class="form-check-label" for="Medium">Medium</label>
        </div>

        <div class="form-check">
            <input type="radio" class="form-check-input" id="High" name="EmergencyLevel" value="High">
            <label class="form-check-label" for="High">High</label>
        </div>
        <span asp-validation-for="EmergencyLevel" class="text-danger"></span>
    </div>

    <!-- Hidden field for UserId -->
    <input type="hidden" asp-for="UserId" value="@ViewBag.User?.Id" />

    <button type="submit" class="btn btn-primary">Create</button>
</form>

<!-- Validation Scripts -->
@section Scripts {
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
